---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "3"
  generation: 3
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    k8s-app: metrics-server
    kubernetes.io/cluster-service: "true"
    version: v0.3.1
name: metrics-server
namespace: kube-system
spec:
  progressDeadlineSeconds: 2147483647
  replicas: 1
  revisionHistoryLimit: 2147483647
  selector:
    matchLabels:
      k8s-app: metrics-server
      version: v0.3.1
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ""
        seccomp.security.alpha.kubernetes.io/pod: docker/default
      creationTimestamp: null
      labels:
        k8s-app: metrics-server
        version: v0.3.1
      name: metrics-server
    spec:
      containers:
      - command:
        - /metrics-server
        - --metric-resolution=30s
        - --kubelet-preferred-address-types=InternalIP
        - --kubelet-insecure-tls
        image: k8s.gcr.io/metrics-server-amd64:v0.3.1
        imagePullPolicy: IfNotPresent
        name: metrics-server
        ports:
        - containerPort: 443
          name: https
          protocol: TCP
        resources:
          limits:
            cpu: 420m
            memory: 260Mi
          requests:
            cpu: 420m
            memory: 260Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      - command:
        - /pod_nanny
        - --config-dir=/etc/config
        - --cpu=300m
        - --extra-cpu=20m
        - --memory=200Mi
        - --extra-memory=10Mi
        - --threshold=5
        - --deployment=metrics-server
        - --container=metrics-server
        - --poll-period=300000
        - --estimator=exponential
        - --minClusterSize=2
        env:
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: MY_POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        image: k8s.gcr.io/addon-resizer:1.8.4
        imagePullPolicy: IfNotPresent
        name: metrics-server-nanny
        resources:
          limits:
            cpu: 420m
            memory: 256Mi
          requests:
            cpu: 200m
            memory: 128Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/config
          name: metrics-server-config-volume
      dnsPolicy: ClusterFirst
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: metrics-server
      serviceAccountName: metrics-server
      terminationGracePeriodSeconds: 30
      tolerations:
      - key: CriticalAddonsOnly
        operator: Exists
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
      volumes:
      - configMap:
          defaultMode: 420
          name: metrics-server-config
        name: metrics-server-config-volume
---
apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"k8s-app":"metrics-server"},"name":"metrics-server","namespace":"kube-system"},"spec":{"ports":[{"name":"https","port":443,"protocol":"TCP","targetPort":"https"}],"selector":{"k8s-app":"metrics-server"}}}
    labels:
      k8s-app: metrics-server
    name: metrics-server
    namespace: kube-system
  spec:
    ports:
    - name: https
      port: 443
      protocol: TCP
      targetPort: https
    selector:
      k8s-app: metrics-server
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}

